.settings-grid-container {
  display: grid;
  width: 100%;
  margin: auto; /* Center the grid horizontally */
  grid-template-columns: repeat(4, 1fr); /* Four equal-width columns */
  grid-template-rows: repeat(2, 1fr); /* Two equal-height rows */
  column-gap: 6.5rem; /* Gap between columns */
  box-sizing: border-box;
  margin-top: 2rem;
}

.settings-card {
  border: 1px solid var(--reflected-light);
  background-color: var(--sensor-card-colors);
  border-radius: 0;
  width: 100%; /* Ensure the card fills its grid cell */
  height: 75%;
  box-shadow: 0 11px 19px 1px #00000038;
  display: flex;
  justify-content: center;
  align-items: center;
}

.settings-card::after {
  content: ""; /* Trick to maintain a square aspect ratio */
  display: block;
  padding-bottom: 100%; /* 100% of the width, ensuring a square */
}

.settings-card > * {
  position: relative; /* Position content within the square */
}

.card-content-container {
  width: 95%; /* Container for the inner boxes */
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: 100%; /* Take up full height of the card */
  padding: 2rem;
  box-sizing: border-box;
}

.settings-title {
  color: var(--green);
  font-weight: 500;
  font-size: 1.4rem;
  text-align: center;
}

.settings-blue-text,
.settings-ssid-input-box,
.settings-password-input-box,
.settings-input-box {
  background-color: #00143642;
  border-style: none none solid;
  border-width: 1px 1px 2px;
  border-color: var(--dark-blue) var(--dark-blue) var(--reflected-light);
  border-top-width: 2px;
  box-shadow: inset 1px 4px 5px #0003;
  color: var(--dark-blue);
  font-size: 1.2rem;
  text-align: center;
  display: flex; /* Enables flexbox layout */
  justify-content: center; /* Centers text horizontally */
  align-items: center; /* Centers text vertically */
  flex-shrink: 0;
  height: 2.5rem; /* Set a fixed height */
  flex-shrink: 0;
  margin-top: 2rem;
  margin-bottom: 1rem; /* Equal spacing between boxes */
  padding: 0.5rem;
}

.settings-blue-text {
  background-color: #0000;
  border: none;
  box-shadow: none;
  color: var(--blue);
}

.settings-button {
  width: 100%;
  padding: 0.5rem;
  border: 1px solid var(--blue);
  border-radius: 2px;
  font-size: 1.3rem;
  font-weight: bold;
  background-color: transparent;
  color: var(--green);
  cursor: pointer;
  text-align: center;
  height: 4rem;
  margin-top: auto; /* Push the button to the bottom of the container */
}

.settings-button:hover {
  border-color: var(--green);
  box-shadow: 0 0 7px -5px var(--green);
  color: var(--green);
  text-shadow: 0 1px 5px #007bff;
}
.settings-button:focus {
  outline: none;
}

/* CSS FOR LAST 3 BOXES  */

.settings-svg-container {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-grow: 1; /* Ensure the SVG container takes up available space */
  margin-bottom: 2rem; /* Space between the SVG and the button */
}

.settings-svg {
  width: 50%; /* Adjust the width of the SVG */
  height: auto; /* Maintain the aspect ratio */
}
.settings-reset-svg {
  width: 85%; /* Adjust the width of the SVG */
  height: auto; /* Maintain the aspect ratio */
}
@media (min-width: 1280px) {
  .settings-grid-container {
    display: grid;
    width: 100%;
    margin: auto; /* Center the grid horizontally */
    grid-template-columns: repeat(4, 1fr); /* Four equal-width columns */
    grid-template-rows: repeat(2, 1fr); /* Two equal-height rows */
    column-gap: 2.5rem; /* Gap between columns */
    row-gap: 2rem;
    box-sizing: border-box;
    margin-top: 2rem;
  }

  .settings-card {
    border: 1px solid var(--reflected-light);
    background-color: var(--sensor-card-colors);
    border-radius: 0;
    width: 100%; /* Ensure the card fills its grid cell */
    height: 100%;
    box-shadow: 0 11px 19px 1px #00000038;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .settings-card::after {
    content: ""; /* Trick to maintain a square aspect ratio */
    display: block;
    padding-bottom: 100%; /* 100% of the width, ensuring a square */
  }

  .settings-card > * {
    position: relative; /* Position content within the square */
  }

  .card-content-container {
    width: 95%; /* Container for the inner boxes */
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%; /* Take up full height of the card */
    padding: 1rem;
    box-sizing: border-box;
  }

  .settings-title {
    color: var(--green);
    font-weight: 500;
    font-size: 0.85rem;
    text-align: center;
  }

  .settings-blue-text,
  .settings-ssid-input-box,
  .settings-password-input-box,
  .settings-input-box {
    font-size: 0.8rem;
    height: 1.3rem; /* Set a fixed height */
    margin-top: 1rem;
    margin-bottom: 0.5rem; /* Equal spacing between boxes */
    padding: 0.5rem;
  }
  .settings-password-input-box {
    /* since box has text inside, box was not lining up perfectly with box on left, this fixes that for this breakpoint */
    margin-top: 0.9rem;
  }

  .settings-button {
    width: 100%;
    padding: 0.5rem;
    border: 1px solid var(--blue);
    border-radius: 2px;
    font-size: 0.85rem;
    font-weight: bold;
    background-color: transparent;
    color: var(--green);
    cursor: pointer;
    text-align: center;
    height: 3rem;
    margin-top: auto; /* Push the button to the bottom of the container */
  }

  /* CSS FOR LAST 3 BOXES  */

  .settings-svg-container {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-grow: 1; /* Ensure the SVG container takes up available space */
    margin-bottom: 1rem; /* Space between the SVG and the button */
  }

  .settings-svg {
    width: 55%; /* Adjust the width of the SVG */
    height: auto; /* Maintain the aspect ratio */
  }
  .settings-reset-svg {
    width: 95%; /* Adjust the width of the SVG */
    height: auto; /* Maintain the aspect ratio */
  }
}
@media (min-width: 1440px) {
  .settings-grid-container {
    display: grid;
    width: 100%;
    margin: auto; /* Center the grid horizontally */
    grid-template-columns: repeat(4, 1fr); /* Four equal-width columns */
    grid-template-rows: repeat(2, 1fr); /* Two equal-height rows */
    column-gap: 2.5rem; /* Gap between columns */
    row-gap: 2rem;
    box-sizing: border-box;
    margin-top: 2rem;
  }

  .settings-card {
    border: 1px solid var(--reflected-light);
    background-color: var(--sensor-card-colors);
    border-radius: 0;
    width: 100%; /* Ensure the card fills its grid cell */
    height: 100%;
    box-shadow: 0 11px 19px 1px #00000038;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .settings-card::after {
    content: ""; /* Trick to maintain a square aspect ratio */
    display: block;
    padding-bottom: 100%; /* 100% of the width, ensuring a square */
  }

  .settings-card > * {
    position: relative; /* Position content within the square */
  }

  .card-content-container {
    width: 95%; /* Container for the inner boxes */
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%; /* Take up full height of the card */
    padding: 1rem;
    box-sizing: border-box;
  }

  .settings-title {
    color: var(--green);
    font-weight: 500;
    font-size: 0.95rem;
    text-align: center;
  }

  .settings-blue-text,
  .settings-ssid-input-box,
  .settings-password-input-box,
  .settings-input-box {
    font-size: 0.9rem;
    height: 1.5rem; /* Set a fixed height */
    margin-top: 1.5rem;
    margin-bottom: 1rem; /* Equal spacing between boxes */
    padding: 0.5rem;
  }
  .settings-password-input-box {
    /* since box has text inside, box was not lining up perfectly with box on left, this fixes that for this breakpoint */
    margin-top: 1.3rem;
  }

  .settings-blue-text {
    background-color: #0000;
    border: none;
    box-shadow: none;
    color: var(--blue);
  }

  .settings-button {
    width: 100%;
    padding: 0.5rem;
    border: 1px solid var(--blue);
    border-radius: 2px;
    font-size: 0.95rem;
    font-weight: bold;
    background-color: transparent;
    color: var(--green);
    cursor: pointer;
    text-align: center;
    height: 3rem;
    margin-top: auto; /* Push the button to the bottom of the container */
  }

  /* CSS FOR LAST 3 BOXES  */

  .settings-svg-container {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-grow: 1; /* Ensure the SVG container takes up available space */
    margin-bottom: 1rem; /* Space between the SVG and the button */
  }

  .settings-svg {
    width: 65%; /* Adjust the width of the SVG */
    height: auto; /* Maintain the aspect ratio */
  }
  .settings-reset-svg {
    width: 100%; /* Adjust the width of the SVG */
    height: auto; /* Maintain the aspect ratio */
  }
}
@media (min-width: 1920px) {
  .settings-grid-container {
    display: grid;
    width: 100%;
    margin: auto; /* Center the grid horizontally */
    grid-template-columns: repeat(4, 1fr); /* Four equal-width columns */
    grid-template-rows: repeat(2, 1fr); /* Two equal-height rows */
    column-gap: 6.5rem; /* Gap between columns */
    row-gap: 2rem;
    box-sizing: border-box;
    margin-top: 2rem;
  }

  .settings-card {
    border: 1px solid var(--reflected-light);
    background-color: var(--sensor-card-colors);
    border-radius: 2px;
    width: 100%; /* Ensure the card fills its grid cell */
    height: 95%;
    box-shadow: 0 11px 19px 1px #00000038;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .settings-card::after {
    content: ""; /* Trick to maintain a square aspect ratio */
    display: block;
    padding-bottom: 100%; /* 100% of the width, ensuring a square */
  }

  .settings-card > * {
    position: relative; /* Position content within the square */
  }

  .card-content-container {
    width: 95%; /* Container for the inner boxes */
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%; /* Take up full height of the card */
    padding: 2rem;
    box-sizing: border-box;
  }

  .settings-title {
    color: var(--green);
    font-weight: 500;
    font-size: 1.3rem;
    text-align: center;
  }

  .settings-blue-text,
  .settings-ssid-input-box,
  .settings-password-input-box,
  .settings-input-box {
    background-color: #00143642;
    border-style: none none solid;
    border-width: 1px 1px 2px;
    border-color: var(--dark-blue) var(--dark-blue) var(--reflected-light);
    border-top-width: 2px;
    box-shadow: inset 1px 4px 5px #0003;
    color: var(--dark-blue);
    font-size: 1.1rem;
    text-align: center;
    display: flex; /* Enables flexbox layout */
    justify-content: center; /* Centers text horizontally */
    align-items: center; /* Centers text vertically */
    flex-shrink: 0;
    height: 2.2rem; /* Set a fixed height */
    flex-shrink: 0;
    margin-top: 2rem;
    margin-bottom: 1rem; /* Equal spacing between boxes */
    padding: 0.5rem;
  }

  .settings-blue-text {
    background-color: #0000;
    border: none;
    box-shadow: none;
    color: var(--blue);
  }

  .settings-button {
    width: 100%;
    padding: 0.5rem;
    border: 1px solid var(--blue);
    border-radius: 2px;
    font-size: 1.1rem;
    font-weight: bold;
    background-color: transparent;
    color: var(--green);
    cursor: pointer;
    text-align: center;
    height: 4rem;
    margin-top: 1rem; /* Push the button to the bottom of the container */
  }

  .settings-button:hover {
    border-color: var(--green);
    box-shadow: 0 0 7px -5px var(--green);
    color: var(--green);
    text-shadow: 0 1px 5px #007bff;
  }
  .settings-button:focus {
    outline: none;
  }

  /* CSS FOR BOTTOM 3 BOXES  */

  .settings-svg-container {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-grow: 1; /* Ensure the SVG container takes up available space */
    margin-top: 1rem;
    margin-bottom: 1rem;
  }

  .settings-svg {
    width: 60%; /* Adjust the width of the SVG */
    height: auto; /* Maintain the aspect ratio */
  }
  .settings-reset-svg {
    width: 100%; /* Adjust the width of the SVG */
    height: auto; /* Maintain the aspect ratio */
  }
}

@media (min-width: 2560px) {
  .settings-grid-container {
    display: grid;
    width: 100%;
    margin: auto; /* Center the grid horizontally */
    grid-template-columns: repeat(4, 1fr); /* Four equal-width columns */
    grid-template-rows: repeat(2, 1fr); /* Two equal-height rows */
    column-gap: 6.5rem; /* Gap between columns */
    box-sizing: border-box;
    margin-top: 2rem;
  }

  .settings-card {
    border: 1px solid var(--reflected-light);
    background-color: var(--sensor-card-colors);
    border-radius: 0;
    width: 100%; /* Ensure the card fills its grid cell */
    height: 75%;
    box-shadow: 0 11px 19px 1px #00000038;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .settings-card::after {
    content: ""; /* Trick to maintain a square aspect ratio */
    display: block;
    padding-bottom: 100%; /* 100% of the width, ensuring a square */
  }

  .settings-card > * {
    position: relative; /* Position content within the square */
  }

  .card-content-container {
    width: 95%; /* Container for the inner boxes */
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%; /* Take up full height of the card */
    padding: 2rem;
    box-sizing: border-box;
  }

  .settings-title {
    color: var(--green);
    font-weight: 500;
    font-size: 1.4rem;
    text-align: center;
  }

  .settings-blue-text,
  .settings-ssid-input-box,
  .settings-password-input-box,
  .settings-input-box {
    background-color: #00143642;
    border-style: none none solid;
    border-width: 1px 1px 2px;
    border-color: var(--dark-blue) var(--dark-blue) var(--reflected-light);
    border-top-width: 2px;
    box-shadow: inset 1px 4px 5px #0003;
    color: var(--dark-blue);
    font-size: 1.2rem;
    text-align: center;
    display: flex; /* Enables flexbox layout */
    justify-content: center; /* Centers text horizontally */
    align-items: center; /* Centers text vertically */
    flex-shrink: 0;
    height: 2.5rem; /* Set a fixed height */
    flex-shrink: 0;
    margin-top: 2rem;
    margin-bottom: 1rem; /* Equal spacing between boxes */
    padding: 0.5rem;
  }

  .settings-blue-text {
    background-color: #0000;
    border: none;
    box-shadow: none;
    color: var(--blue);
  }

  .settings-button {
    width: 100%;
    padding: 0.5rem;
    border: 1px solid var(--blue);
    border-radius: 2px;
    font-size: 1.3rem;
    font-weight: bold;
    background-color: transparent;
    color: var(--green);
    cursor: pointer;
    text-align: center;
    height: 4rem;
    margin-top: auto; /* Push the button to the bottom of the container */
  }

  .settings-button:hover {
    border-color: var(--green);
    box-shadow: 0 0 7px -5px var(--green);
    color: var(--green);
    text-shadow: 0 1px 5px #007bff;
  }
  .settings-button:focus {
    outline: none;
  }

  /* bottom row boxes  */

  .settings-svg-container {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-grow: 1; /* Ensure the SVG container takes up available space */
    margin-bottom: 2rem; /* Space between the SVG and the button */
  }

  .settings-svg {
    width: 50%; /* Adjust the width of the SVG */
    height: auto; /* Maintain the aspect ratio */
  }
  .settings-reset-svg {
    width: 85%; /* Adjust the width of the SVG */
    height: auto; /* Maintain the aspect ratio */
  }
}
